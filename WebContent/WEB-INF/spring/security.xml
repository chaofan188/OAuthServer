<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/beans 
                                 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                                 http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security-3.2.xsd 
                                 http://www.springframework.org/schema/security/oauth2 
                                 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd 
                                 http://www.springframework.org/schema/mvc 
                                 http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

                        
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
   
    
    
    
    <http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="oauth2AuthenticationManager"
    	  entry-point-ref="oauth2AuthenticationEntryPoint">
    	<intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY"/>
    	<anonymous enabled="false"/>
    	<http-basic entry-point-ref="oauth2AuthenticationEntryPoint"/>
    	<custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER"/>
    	<access-denied-handler ref="oauth2AccessDeniedHandler"/>
    </http>
    
    
    
    <beans:bean id="defaultOauth2RequestFactory"  class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory">
    	<beans:constructor-arg name="clientDetailsService" ref="clientDetailsService"/>
    </beans:bean>
    




    <beans:bean id="clientCredentialsTokenEndpointFilter"
                class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <beans:property name="authenticationManager" ref="oauth2AuthenticationManager"/>
    </beans:bean>
    
    <beans:bean id="clientDetailsService" class="com.accessplatform.oauth2.service.CustomJdbcClientDetailsService">
    	<beans:constructor-arg index="0" ref="dataSource"></beans:constructor-arg>
    </beans:bean>
    
    <beans:bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
    	<beans:constructor-arg index="0" ref="dataSource"></beans:constructor-arg>	
    </beans:bean>
    
    <beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
    	<beans:property name="tokenStore" ref="tokenStore"/>
    	<beans:property name="supportRefreshToken" value="true"/>
    </beans:bean>
    
    <beans:bean id="oauth2RequestFactory" class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory">
    	<beans:constructor-arg name="clientDetailsService" ref="clientDetailsService"/>
    </beans:bean>
    
    <beans:bean id="oauthUserApprovalHandler" class="com.accessplatform.oauth2.approval.OauthUserApprovalHandler">
    	<beans:property name="tokenStore" ref="tokenStore"/>
    	<beans:property name="requestFactory" ref="oauth2RequestFactory"/>
    </beans:bean>
    
    
    <oauth2:authorization-server client-details-service-ref="clientDetailsService" token-services-ref="tokenServices"
    							 user-approval-handler-ref="oauthUserApprovalHandler"
    							 user-approval-page="oauth_approval"
    							 error-page="oauth_error">
    	<oauth2:authorization-code/>
    	<oauth2:refresh-token/>
    </oauth2:authorization-server>
    
    <beans:bean id="oauth2AuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"></beans:bean>
    
     <beans:bean id="oauth2ClientDetailsUserService"
                class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <beans:constructor-arg ref="clientDetailsService"/>
    </beans:bean>
    
    <authentication-manager id="oauth2AuthenticationManager">
    	<authentication-provider user-service-ref="oauth2ClientDetailsUserService"/> 	
    </authentication-manager>
    
    
    
    <beans:bean id="oauth2AccessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
        <beans:constructor-arg>
            <beans:list>
                <beans:bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter"/>
                <beans:bean class="org.springframework.security.access.vote.RoleVoter"/>
                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>
    
    <beans:bean id="oauth2AccessDeniedHandler"
                class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>
                
   <http access-denied-page="/login.jsp?authorization_error=2" disable-url-rewriting="true"
   	  authentication-manager-ref="authenticationManager">
   	<intercept-url pattern="/oauth/**" access="ROLE_USER,ROLE_UNITY,ROLE_MOBILE"/>
   	<intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
   	
   	<form-login authentication-failure-url="/login.jsp?authentication_error=1" default-target-url="/index.jsp"
   				login-page="/login.jsp" login-processing-url="/login.do"/>
   	
   	<logout logout-success-url="/index.jsp" logout-url="/logout.do"/>
   	<anonymous/>
   </http>   
   
   <authentication-manager  alias="authenticationManager">
   	<authentication-provider user-service-ref="userService">
   		<password-encoder hash="md5"/>
   	</authentication-provider>
   </authentication-manager>         

</beans:beans>
    	